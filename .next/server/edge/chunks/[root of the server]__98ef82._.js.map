{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\n// Define rutas protegidas\nconst protectedRoutes = [\"/dashboard\"];\n\nexport async function middleware(request: NextRequest) {\n  const currentPath = request.nextUrl.pathname;\n\n  // Solo actúa si la ruta está protegida\n  if (!protectedRoutes.some((route) => currentPath.startsWith(route))) {\n    return NextResponse.next();\n  }\n\n  // Verifica si existe un token en las cookies\n  const token = request.cookies.get(\"jwt\")?.value;\n  if (!token) {\n    console.warn(\"Middleware: No se encontró token.\");\n    return NextResponse.redirect(new URL(\"/signin\", request.url));\n  }\n\n  // Redirige a \"/signin\" si no hay token\n  return NextResponse.next();\n}\n\n// Configuración del matcher\nexport const config = {\n  matcher: [\"/dashboard/:path*\"],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,0BAA0B;AAC1B,MAAM,kBAAkB;IAAC;CAAa;AAE/B,eAAe,WAAW,OAAoB;IACnD,MAAM,cAAc,QAAQ,OAAO,CAAC,QAAQ;IAE5C,uCAAuC;IACvC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,QAAU,YAAY,UAAU,CAAC,SAAS;QACnE,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,6CAA6C;IAC7C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,QAAQ;IAC1C,IAAI,CAAC,OAAO;QACV,QAAQ,IAAI,CAAC;QACb,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,WAAW,QAAQ,GAAG;IAC7D;IAEA,uCAAuC;IACvC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoB;AAChC"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}