{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryancueva/pagina%20tricolor/Tricolor/fronted-tricolor/app/calculadora/components/CalculadoraPintura.tsx"],"sourcesContent":["// @ts-nocheck\n\"use client\";\n\nimport React, { useState, Suspense } from \"react\";\n\ninterface WallDimension {\n  height: number | null;\n  width: number | null;\n  area: number | null;\n  locked: boolean;\n}\n\nconst CalculadoraPintura: React.FC = () => {\n  const [numberOfWalls, setNumberOfWalls] = useState<number | null>(null);\n  const [wallsDimensions, setWallsDimensions] = useState<WallDimension[]>([]);\n  const [paintNeeded, setPaintNeeded] = useState<number | null>(null);\n\n  const initializeWallDimensions = (num: number) => {\n    return Array(num)\n      .fill(null)\n      .map(() => ({ height: null, width: null, area: null, locked: false }));\n  };\n\n  const handleNumberOfWallsChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const value = parseInt(e.target.value, 10) || 0;\n    setNumberOfWalls(value);\n    setWallsDimensions(initializeWallDimensions(value));\n  };\n\n  const updateWallDimension = (\n    index: number,\n    field: \"height\" | \"width\" | \"area\",\n    value: number\n  ) => {\n    setWallsDimensions((prev) => {\n      const updatedWalls = [...prev];\n      const wall = { ...updatedWalls[index], [field]: value };\n\n      if (wall.height && wall.width) {\n        wall.area = wall.height * wall.width;\n        wall.locked = true;\n      }\n\n      updatedWalls[index] = wall;\n      return updatedWalls;\n    });\n  };\n\n  const unlockWall = (index: number) => {\n    setWallsDimensions((prev) => {\n      const updatedWalls = [...prev];\n      updatedWalls[index] = {\n        ...updatedWalls[index],\n        area: null,\n        locked: false,\n      };\n      return updatedWalls;\n    });\n  };\n\n  const calculatePaintNeeded = () => {\n    const totalArea = wallsDimensions.reduce(\n      (sum, wall) => sum + (wall.area || 0),\n      0\n    );\n    const paintCoveragePerLiter = 10; // 10 m² por litro\n    setPaintNeeded(totalArea / paintCoveragePerLiter);\n  };\n\n  return (\n    <div\n      className=\"p-6 max-w-lg mx-auto rounded-lg shadow-md\"\n      data-theme=\"retro\"\n    >\n      <h1 className=\"text-2xl font-bold mb-4\">Calculadora de Pintura</h1>\n\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n          ¿Cuántas paredes vas a pintar?\n        </label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          value={numberOfWalls ?? \"\"}\n          onChange={handleNumberOfWallsChange}\n          className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400\"\n        />\n      </div>\n\n      {wallsDimensions.map((wall, index) => (\n        <div key={index} className=\"mb-4\">\n          <h2 className=\"text-lg font-semibold mb-2\">Pared {index + 1}</h2>\n          <div className=\"flex space-x-4 mb-2\">\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-1\">\n                Altura (metros)\n              </label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                value={wall.height ?? \"\"}\n                onChange={(e) =>\n                  updateWallDimension(\n                    index,\n                    \"height\",\n                    parseFloat(e.target.value) || 0\n                  )\n                }\n                className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400\"\n                disabled={wall.locked}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-1\">\n                Ancho (metros)\n              </label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                value={wall.width ?? \"\"}\n                onChange={(e) =>\n                  updateWallDimension(\n                    index,\n                    \"width\",\n                    parseFloat(e.target.value) || 0\n                  )\n                }\n                className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400\"\n                disabled={wall.locked}\n              />\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-1\">\n              Área Total (m²)\n            </label>\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                value={wall.area ?? \"\"}\n                onChange={(e) =>\n                  updateWallDimension(\n                    index,\n                    \"area\",\n                    parseFloat(e.target.value) || 0\n                  )\n                }\n                className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400\"\n                disabled={wall.locked}\n              />\n              {wall.locked && (\n                <button\n                  onClick={() => unlockWall(index)}\n                  className=\"bg-red-400 text-white px-2 py-1 rounded\"\n                >\n                  ✕\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {numberOfWalls && (\n        <button\n          onClick={calculatePaintNeeded}\n          className=\"w-full bg-yellow-400 text-black py-2 px-4 rounded-lg hover:bg-yellow-500 focus:ring-2 focus:ring-blue-400\"\n        >\n          Calcular cantidad de pintura\n        </button>\n      )}\n\n      {paintNeeded !== null && (\n        <div className=\"mt-6 p-4 bg-green-100 text-green-700 rounded-lg\">\n          <p>\n            Necesitarás aproximadamente{\" \"}\n            <strong>{paintNeeded.toFixed(2)} litros</strong> de pintura.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CalculadoraPintura;\n"],"names":[],"mappings":"AAAA,cAAc;;;;;AAGd;;;AAFA;;AAWA,MAAM,qBAA+B;;IACnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAC1E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9D,MAAM,2BAA2B,CAAC;QAChC,OAAO,MAAM,KACV,IAAI,CAAC,MACL,GAAG,CAAC,IAAM,CAAC;gBAAE,QAAQ;gBAAM,OAAO;gBAAM,MAAM;gBAAM,QAAQ;YAAM,CAAC;IACxE;IAEA,MAAM,4BAA4B,CAChC;QAEA,MAAM,QAAQ,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;QAC9C,iBAAiB;QACjB,mBAAmB,yBAAyB;IAC9C;IAEA,MAAM,sBAAsB,CAC1B,OACA,OACA;QAEA,mBAAmB,CAAC;YAClB,MAAM,eAAe;mBAAI;aAAK;YAC9B,MAAM,OAAO;gBAAE,GAAG,YAAY,CAAC,MAAM;gBAAE,CAAC,MAAM,EAAE;YAAM;YAEtD,IAAI,KAAK,MAAM,IAAI,KAAK,KAAK,EAAE;gBAC7B,KAAK,IAAI,GAAG,KAAK,MAAM,GAAG,KAAK,KAAK;gBACpC,KAAK,MAAM,GAAG;YAChB;YAEA,YAAY,CAAC,MAAM,GAAG;YACtB,OAAO;QACT;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,mBAAmB,CAAC;YAClB,MAAM,eAAe;mBAAI;aAAK;YAC9B,YAAY,CAAC,MAAM,GAAG;gBACpB,GAAG,YAAY,CAAC,MAAM;gBACtB,MAAM;gBACN,QAAQ;YACV;YACA,OAAO;QACT;IACF;IAEA,MAAM,uBAAuB;QAC3B,MAAM,YAAY,gBAAgB,MAAM,CACtC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,GACpC;QAEF,MAAM,wBAAwB,IAAI,kBAAkB;QACpD,eAAe,YAAY;IAC7B;IAEA,qBACE,6LAAC;QACC,WAAU;QACV,cAAW;;0BAEX,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAA6C;;;;;;kCAG9D,6LAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,OAAO,iBAAiB;wBACxB,UAAU;wBACV,WAAU;;;;;;;;;;;;YAIb,gBAAgB,GAAG,CAAC,CAAC,MAAM,sBAC1B,6LAAC;oBAAgB,WAAU;;sCACzB,6LAAC;4BAAG,WAAU;;gCAA6B;gCAAO,QAAQ;;;;;;;sCAC1D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA6C;;;;;;sDAG9D,6LAAC;4CACC,MAAK;4CACL,KAAI;4CACJ,OAAO,KAAK,MAAM,IAAI;4CACtB,UAAU,CAAC,IACT,oBACE,OACA,UACA,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4CAGlC,WAAU;4CACV,UAAU,KAAK,MAAM;;;;;;;;;;;;8CAIzB,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA6C;;;;;;sDAG9D,6LAAC;4CACC,MAAK;4CACL,KAAI;4CACJ,OAAO,KAAK,KAAK,IAAI;4CACrB,UAAU,CAAC,IACT,oBACE,OACA,SACA,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4CAGlC,WAAU;4CACV,UAAU,KAAK,MAAM;;;;;;;;;;;;;;;;;;sCAK3B,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA6C;;;;;;8CAG9D,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,OAAO,KAAK,IAAI,IAAI;4CACpB,UAAU,CAAC,IACT,oBACE,OACA,QACA,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4CAGlC,WAAU;4CACV,UAAU,KAAK,MAAM;;;;;;wCAEtB,KAAK,MAAM,kBACV,6LAAC;4CACC,SAAS,IAAM,WAAW;4CAC1B,WAAU;sDACX;;;;;;;;;;;;;;;;;;;mBAlEC;;;;;YA2EX,+BACC,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAKF,gBAAgB,sBACf,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;wBAAE;wBAC2B;sCAC5B,6LAAC;;gCAAQ,YAAY,OAAO,CAAC;gCAAG;;;;;;;wBAAgB;;;;;;;;;;;;;;;;;;AAM5D;GA9KM;KAAA;uCAgLS"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}